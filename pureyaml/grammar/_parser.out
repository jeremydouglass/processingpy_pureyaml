Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> docs
Rule 1     docs -> doc
Rule 2     docs -> doc DOC_END
Rule 3     docs -> docs doc
Rule 4     doc -> DOC_START doc DOC_END
Rule 5     doc -> DOC_START doc
Rule 6     doc -> INDENT doc DEDENT
Rule 7     doc -> collection
Rule 8     doc -> scalar
Rule 9     scalar -> ignore_indent_dedent scalar
Rule 10    collection -> sequence
Rule 11    collection -> map
Rule 12    collection -> flow_collection
Rule 13    map -> map_item
Rule 14    map -> map map_item
Rule 15    map_item -> map_item_key map_item_value
Rule 16    map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
Rule 17    map_item_key -> B_MAP_KEY scalar
Rule 18    map_item_key -> scalar
Rule 19    map_item_key -> B_MAP_KEY INDENT collection DEDENT
Rule 20    map_item_value -> B_MAP_VALUE INDENT collection DEDENT
Rule 21    map_item_value -> B_MAP_VALUE flow_collection
Rule 22    map_item_value -> B_MAP_VALUE scalar
Rule 23    map_item_value -> B_MAP_VALUE INDENT scalar DEDENT
Rule 24    map_item_value -> B_MAP_VALUE sequence
Rule 25    sequence -> sequence_item
Rule 26    sequence -> sequence sequence_item
Rule 27    sequence_item -> B_SEQUENCE_START scalar
Rule 28    sequence_item -> B_SEQUENCE_START INDENT collection DEDENT
Rule 29    map_item_key -> B_MAP_COMPACT_KEY collection DEDENT
Rule 30    map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT
Rule 31    sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT
Rule 32    sequence_item -> B_SEQUENCE_START flow_collection
Rule 33    scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
Rule 34    scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
Rule 35    scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END
Rule 36    scalar -> SINGLEQUOTE_START SINGLEQUOTE_END
Rule 37    scalar -> CAST_TYPE scalar
Rule 38    scalar -> SCALAR
Rule 39    scalar -> B_LITERAL_START scalar_group B_LITERAL_END
Rule 40    scalar -> B_FOLD_START scalar_group B_FOLD_END
Rule 41    scalar -> INDENT scalar_group DEDENT
Rule 42    scalar -> scalar INDENT SCALAR DEDENT
Rule 43    scalar_group -> SCALAR
Rule 44    scalar_group -> scalar_group SCALAR
Rule 45    ignore_indent_dedent -> INDENT DEDENT
Rule 46    flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END
Rule 47    flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
Rule 48    flow_collection -> F_MAP_START flow_map F_MAP_END
Rule 49    flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END
Rule 50    flow_sequence -> flow_sequence_item
Rule 51    flow_sequence -> flow_sequence F_SEP flow_sequence_item
Rule 52    flow_sequence_item -> scalar
Rule 53    flow_map -> flow_map_item
Rule 54    flow_map -> flow_map F_SEP flow_map_item
Rule 55    flow_map_item -> flow_map_item_key flow_map_item_value
Rule 56    flow_map_item_key -> scalar F_MAP_KEY
Rule 57    flow_map_item_value -> scalar

Terminals, with rules where they appear

B_FOLD_END           : 40
B_FOLD_START         : 40
B_LITERAL_END        : 39
B_LITERAL_START      : 39
B_MAP_COMPACT_KEY    : 16 29
B_MAP_COMPACT_VALUE  : 30
B_MAP_KEY            : 17 19
B_MAP_VALUE          : 16 20 21 22 23 24
B_SEQUENCE_COMPACT_START : 31
B_SEQUENCE_START     : 27 28 32
CAST_TYPE            : 37
DEDENT               : 6 16 19 20 23 28 29 30 31 41 42 45
DOC_END              : 2 4
DOC_START            : 4 5
DOUBLEQUOTE_END      : 33 35
DOUBLEQUOTE_START    : 33 35
F_MAP_END            : 48 49
F_MAP_KEY            : 56
F_MAP_START          : 48 49
F_SEP                : 47 49 51 54
F_SEQUENCE_END       : 46 47
F_SEQUENCE_START     : 46 47
INDENT               : 6 19 20 23 28 41 42 45
SCALAR               : 33 34 38 42 43 44
SINGLEQUOTE_END      : 34 36
SINGLEQUOTE_START    : 34 36
error                : 

Nonterminals, with rules where they appear

collection           : 7 19 20 28 29 30 31
doc                  : 1 2 3 4 5 6
docs                 : 3 0
flow_collection      : 12 21 32
flow_map             : 48 49 54
flow_map_item        : 53 54
flow_map_item_key    : 55
flow_map_item_value  : 55
flow_sequence        : 46 47 51
flow_sequence_item   : 50 51
ignore_indent_dedent : 9
map                  : 11 14
map_item             : 13 14
map_item_key         : 15
map_item_value       : 15
scalar               : 8 9 16 16 17 18 22 23 27 37 42 52 56 57
scalar_group         : 39 40 41 44
sequence             : 10 24 26
sequence_item        : 25 26

Parsing method: LALR

state 0

    (0) S' -> . docs
    (1) docs -> . doc
    (2) docs -> . doc DOC_END
    (3) docs -> . docs doc
    (4) doc -> . DOC_START doc DOC_END
    (5) doc -> . DOC_START doc
    (6) doc -> . INDENT doc DEDENT
    (7) doc -> . collection
    (8) doc -> . scalar
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (45) ignore_indent_dedent -> . INDENT DEDENT
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DOC_START       shift and go to state 24
    INDENT          shift and go to state 5
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    map                            shift and go to state 20
    docs                           shift and go to state 21
    ignore_indent_dedent           shift and go to state 22
    doc                            shift and go to state 9
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 12
    collection                     shift and go to state 13

state 1

    (27) sequence_item -> B_SEQUENCE_START . scalar
    (28) sequence_item -> B_SEQUENCE_START . INDENT collection DEDENT
    (32) sequence_item -> B_SEQUENCE_START . flow_collection
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (45) ignore_indent_dedent -> . INDENT DEDENT

    INDENT          shift and go to state 26
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17

    ignore_indent_dedent           shift and go to state 22
    flow_collection                shift and go to state 27
    scalar                         shift and go to state 28

state 2

    (34) scalar -> SINGLEQUOTE_START . SCALAR SINGLEQUOTE_END
    (36) scalar -> SINGLEQUOTE_START . SINGLEQUOTE_END

    SCALAR          shift and go to state 30
    SINGLEQUOTE_END shift and go to state 29


state 3

    (25) sequence -> sequence_item .

    B_SEQUENCE_START reduce using rule 25 (sequence -> sequence_item .)
    B_SEQUENCE_COMPACT_START reduce using rule 25 (sequence -> sequence_item .)
    DEDENT          reduce using rule 25 (sequence -> sequence_item .)
    DOC_START       reduce using rule 25 (sequence -> sequence_item .)
    INDENT          reduce using rule 25 (sequence -> sequence_item .)
    DOUBLEQUOTE_START reduce using rule 25 (sequence -> sequence_item .)
    SINGLEQUOTE_START reduce using rule 25 (sequence -> sequence_item .)
    CAST_TYPE       reduce using rule 25 (sequence -> sequence_item .)
    SCALAR          reduce using rule 25 (sequence -> sequence_item .)
    B_LITERAL_START reduce using rule 25 (sequence -> sequence_item .)
    B_FOLD_START    reduce using rule 25 (sequence -> sequence_item .)
    F_SEQUENCE_START reduce using rule 25 (sequence -> sequence_item .)
    F_MAP_START     reduce using rule 25 (sequence -> sequence_item .)
    B_MAP_COMPACT_KEY reduce using rule 25 (sequence -> sequence_item .)
    B_MAP_KEY       reduce using rule 25 (sequence -> sequence_item .)
    $end            reduce using rule 25 (sequence -> sequence_item .)
    DOC_END         reduce using rule 25 (sequence -> sequence_item .)


state 4

    (31) sequence_item -> B_SEQUENCE_COMPACT_START . collection DEDENT
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    map                            shift and go to state 20
    ignore_indent_dedent           shift and go to state 22
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 32
    collection                     shift and go to state 33

state 5

    (6) doc -> INDENT . doc DEDENT
    (41) scalar -> INDENT . scalar_group DEDENT
    (45) ignore_indent_dedent -> INDENT . DEDENT
    (4) doc -> . DOC_START doc DOC_END
    (5) doc -> . DOC_START doc
    (6) doc -> . INDENT doc DEDENT
    (7) doc -> . collection
    (8) doc -> . scalar
    (43) scalar_group -> . SCALAR
    (44) scalar_group -> . scalar_group SCALAR
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (45) ignore_indent_dedent -> . INDENT DEDENT
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DEDENT          shift and go to state 34
    DOC_START       shift and go to state 24
    INDENT          shift and go to state 5
    SCALAR          shift and go to state 36
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    scalar_group                   shift and go to state 37
    map                            shift and go to state 20
    ignore_indent_dedent           shift and go to state 22
    doc                            shift and go to state 35
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 12
    collection                     shift and go to state 13

state 6

    (15) map_item -> map_item_key . map_item_value
    (20) map_item_value -> . B_MAP_VALUE INDENT collection DEDENT
    (21) map_item_value -> . B_MAP_VALUE flow_collection
    (22) map_item_value -> . B_MAP_VALUE scalar
    (23) map_item_value -> . B_MAP_VALUE INDENT scalar DEDENT
    (24) map_item_value -> . B_MAP_VALUE sequence
    (30) map_item_value -> . B_MAP_COMPACT_VALUE collection DEDENT

    B_MAP_VALUE     shift and go to state 40
    B_MAP_COMPACT_VALUE shift and go to state 39

    map_item_value                 shift and go to state 38

state 7

    (40) scalar -> B_FOLD_START . scalar_group B_FOLD_END
    (43) scalar_group -> . SCALAR
    (44) scalar_group -> . scalar_group SCALAR

    SCALAR          shift and go to state 42

    scalar_group                   shift and go to state 41

state 8

    (17) map_item_key -> B_MAP_KEY . scalar
    (19) map_item_key -> B_MAP_KEY . INDENT collection DEDENT
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    INDENT          shift and go to state 43
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7

    ignore_indent_dedent           shift and go to state 22
    scalar                         shift and go to state 44

state 9

    (1) docs -> doc .
    (2) docs -> doc . DOC_END

    DOC_START       reduce using rule 1 (docs -> doc .)
    INDENT          reduce using rule 1 (docs -> doc .)
    DOUBLEQUOTE_START reduce using rule 1 (docs -> doc .)
    SINGLEQUOTE_START reduce using rule 1 (docs -> doc .)
    CAST_TYPE       reduce using rule 1 (docs -> doc .)
    SCALAR          reduce using rule 1 (docs -> doc .)
    B_LITERAL_START reduce using rule 1 (docs -> doc .)
    B_FOLD_START    reduce using rule 1 (docs -> doc .)
    F_SEQUENCE_START reduce using rule 1 (docs -> doc .)
    F_MAP_START     reduce using rule 1 (docs -> doc .)
    B_SEQUENCE_START reduce using rule 1 (docs -> doc .)
    B_SEQUENCE_COMPACT_START reduce using rule 1 (docs -> doc .)
    B_MAP_COMPACT_KEY reduce using rule 1 (docs -> doc .)
    B_MAP_KEY       reduce using rule 1 (docs -> doc .)
    $end            reduce using rule 1 (docs -> doc .)
    DOC_END         shift and go to state 45


state 10

    (39) scalar -> B_LITERAL_START . scalar_group B_LITERAL_END
    (43) scalar_group -> . SCALAR
    (44) scalar_group -> . scalar_group SCALAR

    SCALAR          shift and go to state 42

    scalar_group                   shift and go to state 46

state 11

    (12) collection -> flow_collection .

    DEDENT          reduce using rule 12 (collection -> flow_collection .)
    DOC_END         reduce using rule 12 (collection -> flow_collection .)
    DOC_START       reduce using rule 12 (collection -> flow_collection .)
    INDENT          reduce using rule 12 (collection -> flow_collection .)
    DOUBLEQUOTE_START reduce using rule 12 (collection -> flow_collection .)
    SINGLEQUOTE_START reduce using rule 12 (collection -> flow_collection .)
    CAST_TYPE       reduce using rule 12 (collection -> flow_collection .)
    SCALAR          reduce using rule 12 (collection -> flow_collection .)
    B_LITERAL_START reduce using rule 12 (collection -> flow_collection .)
    B_FOLD_START    reduce using rule 12 (collection -> flow_collection .)
    F_SEQUENCE_START reduce using rule 12 (collection -> flow_collection .)
    F_MAP_START     reduce using rule 12 (collection -> flow_collection .)
    B_SEQUENCE_START reduce using rule 12 (collection -> flow_collection .)
    B_SEQUENCE_COMPACT_START reduce using rule 12 (collection -> flow_collection .)
    B_MAP_COMPACT_KEY reduce using rule 12 (collection -> flow_collection .)
    B_MAP_KEY       reduce using rule 12 (collection -> flow_collection .)
    $end            reduce using rule 12 (collection -> flow_collection .)


state 12

    (8) doc -> scalar .
    (42) scalar -> scalar . INDENT SCALAR DEDENT
    (18) map_item_key -> scalar .

  ! shift/reduce conflict for INDENT resolved as shift
    DOC_END         reduce using rule 8 (doc -> scalar .)
    DOC_START       reduce using rule 8 (doc -> scalar .)
    DOUBLEQUOTE_START reduce using rule 8 (doc -> scalar .)
    SINGLEQUOTE_START reduce using rule 8 (doc -> scalar .)
    CAST_TYPE       reduce using rule 8 (doc -> scalar .)
    SCALAR          reduce using rule 8 (doc -> scalar .)
    B_LITERAL_START reduce using rule 8 (doc -> scalar .)
    B_FOLD_START    reduce using rule 8 (doc -> scalar .)
    F_SEQUENCE_START reduce using rule 8 (doc -> scalar .)
    F_MAP_START     reduce using rule 8 (doc -> scalar .)
    B_SEQUENCE_START reduce using rule 8 (doc -> scalar .)
    B_SEQUENCE_COMPACT_START reduce using rule 8 (doc -> scalar .)
    B_MAP_COMPACT_KEY reduce using rule 8 (doc -> scalar .)
    B_MAP_KEY       reduce using rule 8 (doc -> scalar .)
    $end            reduce using rule 8 (doc -> scalar .)
    DEDENT          reduce using rule 8 (doc -> scalar .)
    INDENT          shift and go to state 47
    B_MAP_VALUE     reduce using rule 18 (map_item_key -> scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 18 (map_item_key -> scalar .)

  ! INDENT          [ reduce using rule 8 (doc -> scalar .) ]


state 13

    (7) doc -> collection .

    DOC_END         reduce using rule 7 (doc -> collection .)
    DOC_START       reduce using rule 7 (doc -> collection .)
    INDENT          reduce using rule 7 (doc -> collection .)
    DOUBLEQUOTE_START reduce using rule 7 (doc -> collection .)
    SINGLEQUOTE_START reduce using rule 7 (doc -> collection .)
    CAST_TYPE       reduce using rule 7 (doc -> collection .)
    SCALAR          reduce using rule 7 (doc -> collection .)
    B_LITERAL_START reduce using rule 7 (doc -> collection .)
    B_FOLD_START    reduce using rule 7 (doc -> collection .)
    F_SEQUENCE_START reduce using rule 7 (doc -> collection .)
    F_MAP_START     reduce using rule 7 (doc -> collection .)
    B_SEQUENCE_START reduce using rule 7 (doc -> collection .)
    B_SEQUENCE_COMPACT_START reduce using rule 7 (doc -> collection .)
    B_MAP_COMPACT_KEY reduce using rule 7 (doc -> collection .)
    B_MAP_KEY       reduce using rule 7 (doc -> collection .)
    $end            reduce using rule 7 (doc -> collection .)
    DEDENT          reduce using rule 7 (doc -> collection .)


state 14

    (38) scalar -> SCALAR .

    INDENT          reduce using rule 38 (scalar -> SCALAR .)
    DOC_START       reduce using rule 38 (scalar -> SCALAR .)
    DOUBLEQUOTE_START reduce using rule 38 (scalar -> SCALAR .)
    SINGLEQUOTE_START reduce using rule 38 (scalar -> SCALAR .)
    CAST_TYPE       reduce using rule 38 (scalar -> SCALAR .)
    SCALAR          reduce using rule 38 (scalar -> SCALAR .)
    B_LITERAL_START reduce using rule 38 (scalar -> SCALAR .)
    B_FOLD_START    reduce using rule 38 (scalar -> SCALAR .)
    F_SEQUENCE_START reduce using rule 38 (scalar -> SCALAR .)
    F_MAP_START     reduce using rule 38 (scalar -> SCALAR .)
    B_SEQUENCE_START reduce using rule 38 (scalar -> SCALAR .)
    B_SEQUENCE_COMPACT_START reduce using rule 38 (scalar -> SCALAR .)
    B_MAP_COMPACT_KEY reduce using rule 38 (scalar -> SCALAR .)
    B_MAP_KEY       reduce using rule 38 (scalar -> SCALAR .)
    $end            reduce using rule 38 (scalar -> SCALAR .)
    B_MAP_VALUE     reduce using rule 38 (scalar -> SCALAR .)
    B_MAP_COMPACT_VALUE reduce using rule 38 (scalar -> SCALAR .)
    DOC_END         reduce using rule 38 (scalar -> SCALAR .)
    F_MAP_KEY       reduce using rule 38 (scalar -> SCALAR .)
    DEDENT          reduce using rule 38 (scalar -> SCALAR .)
    F_SEQUENCE_END  reduce using rule 38 (scalar -> SCALAR .)
    F_SEP           reduce using rule 38 (scalar -> SCALAR .)
    F_MAP_END       reduce using rule 38 (scalar -> SCALAR .)


state 15

    (13) map -> map_item .

    B_MAP_COMPACT_KEY reduce using rule 13 (map -> map_item .)
    B_MAP_KEY       reduce using rule 13 (map -> map_item .)
    DOUBLEQUOTE_START reduce using rule 13 (map -> map_item .)
    SINGLEQUOTE_START reduce using rule 13 (map -> map_item .)
    CAST_TYPE       reduce using rule 13 (map -> map_item .)
    SCALAR          reduce using rule 13 (map -> map_item .)
    B_LITERAL_START reduce using rule 13 (map -> map_item .)
    B_FOLD_START    reduce using rule 13 (map -> map_item .)
    INDENT          reduce using rule 13 (map -> map_item .)
    DEDENT          reduce using rule 13 (map -> map_item .)
    DOC_END         reduce using rule 13 (map -> map_item .)
    DOC_START       reduce using rule 13 (map -> map_item .)
    F_SEQUENCE_START reduce using rule 13 (map -> map_item .)
    F_MAP_START     reduce using rule 13 (map -> map_item .)
    B_SEQUENCE_START reduce using rule 13 (map -> map_item .)
    B_SEQUENCE_COMPACT_START reduce using rule 13 (map -> map_item .)
    $end            reduce using rule 13 (map -> map_item .)


state 16

    (33) scalar -> DOUBLEQUOTE_START . SCALAR DOUBLEQUOTE_END
    (35) scalar -> DOUBLEQUOTE_START . DOUBLEQUOTE_END

    SCALAR          shift and go to state 49
    DOUBLEQUOTE_END shift and go to state 48


state 17

    (48) flow_collection -> F_MAP_START . flow_map F_MAP_END
    (49) flow_collection -> F_MAP_START . flow_map F_SEP F_MAP_END
    (53) flow_map -> . flow_map_item
    (54) flow_map -> . flow_map F_SEP flow_map_item
    (55) flow_map_item -> . flow_map_item_key flow_map_item_value
    (56) flow_map_item_key -> . scalar F_MAP_KEY
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    flow_map                       shift and go to state 53
    ignore_indent_dedent           shift and go to state 22
    flow_map_item                  shift and go to state 52
    scalar                         shift and go to state 51
    flow_map_item_key              shift and go to state 50

state 18

    (37) scalar -> CAST_TYPE . scalar
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    ignore_indent_dedent           shift and go to state 22
    scalar                         shift and go to state 54

state 19

    (16) map_item -> B_MAP_COMPACT_KEY . scalar B_MAP_VALUE scalar DEDENT
    (29) map_item_key -> B_MAP_COMPACT_KEY . collection DEDENT
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (45) ignore_indent_dedent -> . INDENT DEDENT
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    map                            shift and go to state 20
    ignore_indent_dedent           shift and go to state 22
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 55
    collection                     shift and go to state 56

state 20

    (11) collection -> map .
    (14) map -> map . map_item
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

  ! shift/reduce conflict for B_MAP_COMPACT_KEY resolved as shift
  ! shift/reduce conflict for B_MAP_KEY resolved as shift
  ! shift/reduce conflict for DOUBLEQUOTE_START resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE_START resolved as shift
  ! shift/reduce conflict for CAST_TYPE resolved as shift
  ! shift/reduce conflict for SCALAR resolved as shift
  ! shift/reduce conflict for B_LITERAL_START resolved as shift
  ! shift/reduce conflict for B_FOLD_START resolved as shift
  ! shift/reduce conflict for INDENT resolved as shift
    DEDENT          reduce using rule 11 (collection -> map .)
    DOC_END         reduce using rule 11 (collection -> map .)
    DOC_START       reduce using rule 11 (collection -> map .)
    F_SEQUENCE_START reduce using rule 11 (collection -> map .)
    F_MAP_START     reduce using rule 11 (collection -> map .)
    B_SEQUENCE_START reduce using rule 11 (collection -> map .)
    B_SEQUENCE_COMPACT_START reduce using rule 11 (collection -> map .)
    $end            reduce using rule 11 (collection -> map .)
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

  ! INDENT          [ reduce using rule 11 (collection -> map .) ]
  ! DOUBLEQUOTE_START [ reduce using rule 11 (collection -> map .) ]
  ! SINGLEQUOTE_START [ reduce using rule 11 (collection -> map .) ]
  ! CAST_TYPE       [ reduce using rule 11 (collection -> map .) ]
  ! SCALAR          [ reduce using rule 11 (collection -> map .) ]
  ! B_LITERAL_START [ reduce using rule 11 (collection -> map .) ]
  ! B_FOLD_START    [ reduce using rule 11 (collection -> map .) ]
  ! B_MAP_COMPACT_KEY [ reduce using rule 11 (collection -> map .) ]
  ! B_MAP_KEY       [ reduce using rule 11 (collection -> map .) ]

    ignore_indent_dedent           shift and go to state 22
    map_item                       shift and go to state 57
    scalar                         shift and go to state 32
    map_item_key                   shift and go to state 6

state 21

    (0) S' -> docs .
    (3) docs -> docs . doc
    (4) doc -> . DOC_START doc DOC_END
    (5) doc -> . DOC_START doc
    (6) doc -> . INDENT doc DEDENT
    (7) doc -> . collection
    (8) doc -> . scalar
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (45) ignore_indent_dedent -> . INDENT DEDENT
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DOC_START       shift and go to state 24
    INDENT          shift and go to state 5
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    map                            shift and go to state 20
    ignore_indent_dedent           shift and go to state 22
    doc                            shift and go to state 58
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 12
    collection                     shift and go to state 13

state 22

    (9) scalar -> ignore_indent_dedent . scalar
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    ignore_indent_dedent           shift and go to state 22
    scalar                         shift and go to state 59

state 23

    (46) flow_collection -> F_SEQUENCE_START . flow_sequence F_SEQUENCE_END
    (47) flow_collection -> F_SEQUENCE_START . flow_sequence F_SEP F_SEQUENCE_END
    (50) flow_sequence -> . flow_sequence_item
    (51) flow_sequence -> . flow_sequence F_SEP flow_sequence_item
    (52) flow_sequence_item -> . scalar
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    ignore_indent_dedent           shift and go to state 22
    flow_sequence_item             shift and go to state 60
    scalar                         shift and go to state 62
    flow_sequence                  shift and go to state 61

state 24

    (4) doc -> DOC_START . doc DOC_END
    (5) doc -> DOC_START . doc
    (4) doc -> . DOC_START doc DOC_END
    (5) doc -> . DOC_START doc
    (6) doc -> . INDENT doc DEDENT
    (7) doc -> . collection
    (8) doc -> . scalar
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (45) ignore_indent_dedent -> . INDENT DEDENT
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DOC_START       shift and go to state 24
    INDENT          shift and go to state 5
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    map                            shift and go to state 20
    ignore_indent_dedent           shift and go to state 22
    doc                            shift and go to state 63
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 12
    collection                     shift and go to state 13

state 25

    (10) collection -> sequence .
    (26) sequence -> sequence . sequence_item
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection

  ! shift/reduce conflict for B_SEQUENCE_START resolved as shift
  ! shift/reduce conflict for B_SEQUENCE_COMPACT_START resolved as shift
    DEDENT          reduce using rule 10 (collection -> sequence .)
    DOC_END         reduce using rule 10 (collection -> sequence .)
    DOC_START       reduce using rule 10 (collection -> sequence .)
    INDENT          reduce using rule 10 (collection -> sequence .)
    DOUBLEQUOTE_START reduce using rule 10 (collection -> sequence .)
    SINGLEQUOTE_START reduce using rule 10 (collection -> sequence .)
    CAST_TYPE       reduce using rule 10 (collection -> sequence .)
    SCALAR          reduce using rule 10 (collection -> sequence .)
    B_LITERAL_START reduce using rule 10 (collection -> sequence .)
    B_FOLD_START    reduce using rule 10 (collection -> sequence .)
    F_SEQUENCE_START reduce using rule 10 (collection -> sequence .)
    F_MAP_START     reduce using rule 10 (collection -> sequence .)
    B_MAP_COMPACT_KEY reduce using rule 10 (collection -> sequence .)
    B_MAP_KEY       reduce using rule 10 (collection -> sequence .)
    $end            reduce using rule 10 (collection -> sequence .)
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4

  ! B_SEQUENCE_START [ reduce using rule 10 (collection -> sequence .) ]
  ! B_SEQUENCE_COMPACT_START [ reduce using rule 10 (collection -> sequence .) ]

    sequence_item                  shift and go to state 64

state 26

    (28) sequence_item -> B_SEQUENCE_START INDENT . collection DEDENT
    (41) scalar -> INDENT . scalar_group DEDENT
    (45) ignore_indent_dedent -> INDENT . DEDENT
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (43) scalar_group -> . SCALAR
    (44) scalar_group -> . scalar_group SCALAR
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    DEDENT          shift and go to state 34
    SCALAR          shift and go to state 36
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    scalar_group                   shift and go to state 37
    map                            shift and go to state 20
    ignore_indent_dedent           shift and go to state 22
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 32
    collection                     shift and go to state 65

state 27

    (32) sequence_item -> B_SEQUENCE_START flow_collection .

    B_SEQUENCE_START reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_SEQUENCE_COMPACT_START reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    DEDENT          reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_MAP_COMPACT_KEY reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_MAP_KEY       reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    DOUBLEQUOTE_START reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    SINGLEQUOTE_START reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    CAST_TYPE       reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    SCALAR          reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_LITERAL_START reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_FOLD_START    reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    INDENT          reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    DOC_END         reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    DOC_START       reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    F_SEQUENCE_START reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    F_MAP_START     reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)
    $end            reduce using rule 32 (sequence_item -> B_SEQUENCE_START flow_collection .)


state 28

    (27) sequence_item -> B_SEQUENCE_START scalar .
    (42) scalar -> scalar . INDENT SCALAR DEDENT

  ! shift/reduce conflict for INDENT resolved as shift
    B_SEQUENCE_START reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    B_SEQUENCE_COMPACT_START reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    DEDENT          reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    B_MAP_COMPACT_KEY reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    B_MAP_KEY       reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    DOUBLEQUOTE_START reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    SINGLEQUOTE_START reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    CAST_TYPE       reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    SCALAR          reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    B_LITERAL_START reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    B_FOLD_START    reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    DOC_END         reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    DOC_START       reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    F_SEQUENCE_START reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    F_MAP_START     reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    $end            reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .)
    INDENT          shift and go to state 47

  ! INDENT          [ reduce using rule 27 (sequence_item -> B_SEQUENCE_START scalar .) ]


state 29

    (36) scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .

    INDENT          reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_MAP_VALUE     reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_MAP_COMPACT_VALUE reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    DOC_START       reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    DOUBLEQUOTE_START reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    SINGLEQUOTE_START reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    CAST_TYPE       reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    SCALAR          reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_LITERAL_START reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_FOLD_START    reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_SEQUENCE_START reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_MAP_START     reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_SEQUENCE_START reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_MAP_COMPACT_KEY reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_MAP_KEY       reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    $end            reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    DEDENT          reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    DOC_END         reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_MAP_KEY       reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_SEQUENCE_END  reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_SEP           reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_MAP_END       reduce using rule 36 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)


state 30

    (34) scalar -> SINGLEQUOTE_START SCALAR . SINGLEQUOTE_END

    SINGLEQUOTE_END shift and go to state 66


state 31

    (41) scalar -> INDENT . scalar_group DEDENT
    (45) ignore_indent_dedent -> INDENT . DEDENT
    (43) scalar_group -> . SCALAR
    (44) scalar_group -> . scalar_group SCALAR

    DEDENT          shift and go to state 34
    SCALAR          shift and go to state 42

    scalar_group                   shift and go to state 37

state 32

    (18) map_item_key -> scalar .
    (42) scalar -> scalar . INDENT SCALAR DEDENT

    B_MAP_VALUE     reduce using rule 18 (map_item_key -> scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 18 (map_item_key -> scalar .)
    INDENT          shift and go to state 47


state 33

    (31) sequence_item -> B_SEQUENCE_COMPACT_START collection . DEDENT

    DEDENT          shift and go to state 67


state 34

    (45) ignore_indent_dedent -> INDENT DEDENT .

    DOUBLEQUOTE_START reduce using rule 45 (ignore_indent_dedent -> INDENT DEDENT .)
    SINGLEQUOTE_START reduce using rule 45 (ignore_indent_dedent -> INDENT DEDENT .)
    CAST_TYPE       reduce using rule 45 (ignore_indent_dedent -> INDENT DEDENT .)
    SCALAR          reduce using rule 45 (ignore_indent_dedent -> INDENT DEDENT .)
    B_LITERAL_START reduce using rule 45 (ignore_indent_dedent -> INDENT DEDENT .)
    B_FOLD_START    reduce using rule 45 (ignore_indent_dedent -> INDENT DEDENT .)
    INDENT          reduce using rule 45 (ignore_indent_dedent -> INDENT DEDENT .)


state 35

    (6) doc -> INDENT doc . DEDENT

    DEDENT          shift and go to state 68


state 36

    (43) scalar_group -> SCALAR .
    (38) scalar -> SCALAR .

  ! reduce/reduce conflict for DEDENT resolved using rule 38 (scalar -> SCALAR .)
    SCALAR          reduce using rule 43 (scalar_group -> SCALAR .)
    INDENT          reduce using rule 38 (scalar -> SCALAR .)
    B_MAP_VALUE     reduce using rule 38 (scalar -> SCALAR .)
    B_MAP_COMPACT_VALUE reduce using rule 38 (scalar -> SCALAR .)
    DEDENT          reduce using rule 38 (scalar -> SCALAR .)

  ! DEDENT          [ reduce using rule 43 (scalar_group -> SCALAR .) ]


state 37

    (41) scalar -> INDENT scalar_group . DEDENT
    (44) scalar_group -> scalar_group . SCALAR

    DEDENT          shift and go to state 69
    SCALAR          shift and go to state 70


state 38

    (15) map_item -> map_item_key map_item_value .

    B_MAP_COMPACT_KEY reduce using rule 15 (map_item -> map_item_key map_item_value .)
    B_MAP_KEY       reduce using rule 15 (map_item -> map_item_key map_item_value .)
    DOUBLEQUOTE_START reduce using rule 15 (map_item -> map_item_key map_item_value .)
    SINGLEQUOTE_START reduce using rule 15 (map_item -> map_item_key map_item_value .)
    CAST_TYPE       reduce using rule 15 (map_item -> map_item_key map_item_value .)
    SCALAR          reduce using rule 15 (map_item -> map_item_key map_item_value .)
    B_LITERAL_START reduce using rule 15 (map_item -> map_item_key map_item_value .)
    B_FOLD_START    reduce using rule 15 (map_item -> map_item_key map_item_value .)
    INDENT          reduce using rule 15 (map_item -> map_item_key map_item_value .)
    DEDENT          reduce using rule 15 (map_item -> map_item_key map_item_value .)
    DOC_END         reduce using rule 15 (map_item -> map_item_key map_item_value .)
    DOC_START       reduce using rule 15 (map_item -> map_item_key map_item_value .)
    F_SEQUENCE_START reduce using rule 15 (map_item -> map_item_key map_item_value .)
    F_MAP_START     reduce using rule 15 (map_item -> map_item_key map_item_value .)
    B_SEQUENCE_START reduce using rule 15 (map_item -> map_item_key map_item_value .)
    B_SEQUENCE_COMPACT_START reduce using rule 15 (map_item -> map_item_key map_item_value .)
    $end            reduce using rule 15 (map_item -> map_item_key map_item_value .)


state 39

    (30) map_item_value -> B_MAP_COMPACT_VALUE . collection DEDENT
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    map                            shift and go to state 20
    ignore_indent_dedent           shift and go to state 22
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 32
    collection                     shift and go to state 71

state 40

    (20) map_item_value -> B_MAP_VALUE . INDENT collection DEDENT
    (21) map_item_value -> B_MAP_VALUE . flow_collection
    (22) map_item_value -> B_MAP_VALUE . scalar
    (23) map_item_value -> B_MAP_VALUE . INDENT scalar DEDENT
    (24) map_item_value -> B_MAP_VALUE . sequence
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (45) ignore_indent_dedent -> . INDENT DEDENT
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection

    INDENT          shift and go to state 72
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4

    sequence_item                  shift and go to state 3
    ignore_indent_dedent           shift and go to state 22
    scalar                         shift and go to state 74
    flow_collection                shift and go to state 73
    sequence                       shift and go to state 75

state 41

    (40) scalar -> B_FOLD_START scalar_group . B_FOLD_END
    (44) scalar_group -> scalar_group . SCALAR

    B_FOLD_END      shift and go to state 76
    SCALAR          shift and go to state 70


state 42

    (43) scalar_group -> SCALAR .

    B_LITERAL_END   reduce using rule 43 (scalar_group -> SCALAR .)
    SCALAR          reduce using rule 43 (scalar_group -> SCALAR .)
    DEDENT          reduce using rule 43 (scalar_group -> SCALAR .)
    B_FOLD_END      reduce using rule 43 (scalar_group -> SCALAR .)


state 43

    (19) map_item_key -> B_MAP_KEY INDENT . collection DEDENT
    (41) scalar -> INDENT . scalar_group DEDENT
    (45) ignore_indent_dedent -> INDENT . DEDENT
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (43) scalar_group -> . SCALAR
    (44) scalar_group -> . scalar_group SCALAR
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    DEDENT          shift and go to state 34
    SCALAR          shift and go to state 36
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    scalar_group                   shift and go to state 37
    map                            shift and go to state 20
    ignore_indent_dedent           shift and go to state 22
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 32
    collection                     shift and go to state 77

state 44

    (17) map_item_key -> B_MAP_KEY scalar .
    (42) scalar -> scalar . INDENT SCALAR DEDENT

    B_MAP_VALUE     reduce using rule 17 (map_item_key -> B_MAP_KEY scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 17 (map_item_key -> B_MAP_KEY scalar .)
    INDENT          shift and go to state 47


state 45

    (2) docs -> doc DOC_END .

    DOC_START       reduce using rule 2 (docs -> doc DOC_END .)
    INDENT          reduce using rule 2 (docs -> doc DOC_END .)
    DOUBLEQUOTE_START reduce using rule 2 (docs -> doc DOC_END .)
    SINGLEQUOTE_START reduce using rule 2 (docs -> doc DOC_END .)
    CAST_TYPE       reduce using rule 2 (docs -> doc DOC_END .)
    SCALAR          reduce using rule 2 (docs -> doc DOC_END .)
    B_LITERAL_START reduce using rule 2 (docs -> doc DOC_END .)
    B_FOLD_START    reduce using rule 2 (docs -> doc DOC_END .)
    F_SEQUENCE_START reduce using rule 2 (docs -> doc DOC_END .)
    F_MAP_START     reduce using rule 2 (docs -> doc DOC_END .)
    B_SEQUENCE_START reduce using rule 2 (docs -> doc DOC_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 2 (docs -> doc DOC_END .)
    B_MAP_COMPACT_KEY reduce using rule 2 (docs -> doc DOC_END .)
    B_MAP_KEY       reduce using rule 2 (docs -> doc DOC_END .)
    $end            reduce using rule 2 (docs -> doc DOC_END .)


state 46

    (39) scalar -> B_LITERAL_START scalar_group . B_LITERAL_END
    (44) scalar_group -> scalar_group . SCALAR

    B_LITERAL_END   shift and go to state 78
    SCALAR          shift and go to state 70


state 47

    (42) scalar -> scalar INDENT . SCALAR DEDENT

    SCALAR          shift and go to state 79


state 48

    (35) scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .

    INDENT          reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_MAP_VALUE     reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_MAP_COMPACT_VALUE reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    DOC_START       reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    DOUBLEQUOTE_START reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    SINGLEQUOTE_START reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    CAST_TYPE       reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    SCALAR          reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_LITERAL_START reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_FOLD_START    reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_SEQUENCE_START reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_MAP_START     reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_SEQUENCE_START reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_MAP_COMPACT_KEY reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_MAP_KEY       reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    $end            reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    DEDENT          reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    DOC_END         reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_MAP_KEY       reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_SEQUENCE_END  reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_SEP           reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_MAP_END       reduce using rule 35 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)


state 49

    (33) scalar -> DOUBLEQUOTE_START SCALAR . DOUBLEQUOTE_END

    DOUBLEQUOTE_END shift and go to state 80


state 50

    (55) flow_map_item -> flow_map_item_key . flow_map_item_value
    (57) flow_map_item_value -> . scalar
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    ignore_indent_dedent           shift and go to state 22
    scalar                         shift and go to state 82
    flow_map_item_value            shift and go to state 81

state 51

    (56) flow_map_item_key -> scalar . F_MAP_KEY
    (42) scalar -> scalar . INDENT SCALAR DEDENT

    F_MAP_KEY       shift and go to state 83
    INDENT          shift and go to state 47


state 52

    (53) flow_map -> flow_map_item .

    F_MAP_END       reduce using rule 53 (flow_map -> flow_map_item .)
    F_SEP           reduce using rule 53 (flow_map -> flow_map_item .)


state 53

    (48) flow_collection -> F_MAP_START flow_map . F_MAP_END
    (49) flow_collection -> F_MAP_START flow_map . F_SEP F_MAP_END
    (54) flow_map -> flow_map . F_SEP flow_map_item

    F_MAP_END       shift and go to state 84
    F_SEP           shift and go to state 85


state 54

    (37) scalar -> CAST_TYPE scalar .
    (42) scalar -> scalar . INDENT SCALAR DEDENT

  ! shift/reduce conflict for INDENT resolved as shift
    B_MAP_VALUE     reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    DOC_START       reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    DOUBLEQUOTE_START reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    SINGLEQUOTE_START reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    CAST_TYPE       reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    SCALAR          reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    B_LITERAL_START reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    B_FOLD_START    reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    F_SEQUENCE_START reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    F_MAP_START     reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    B_SEQUENCE_START reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    B_SEQUENCE_COMPACT_START reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    B_MAP_COMPACT_KEY reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    B_MAP_KEY       reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    $end            reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    DEDENT          reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    DOC_END         reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    F_MAP_KEY       reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    F_SEQUENCE_END  reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    F_SEP           reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    F_MAP_END       reduce using rule 37 (scalar -> CAST_TYPE scalar .)
    INDENT          shift and go to state 47

  ! INDENT          [ reduce using rule 37 (scalar -> CAST_TYPE scalar .) ]


state 55

    (16) map_item -> B_MAP_COMPACT_KEY scalar . B_MAP_VALUE scalar DEDENT
    (42) scalar -> scalar . INDENT SCALAR DEDENT
    (18) map_item_key -> scalar .

  ! shift/reduce conflict for B_MAP_VALUE resolved as shift
    B_MAP_VALUE     shift and go to state 86
    INDENT          shift and go to state 47
    B_MAP_COMPACT_VALUE reduce using rule 18 (map_item_key -> scalar .)

  ! B_MAP_VALUE     [ reduce using rule 18 (map_item_key -> scalar .) ]


state 56

    (29) map_item_key -> B_MAP_COMPACT_KEY collection . DEDENT

    DEDENT          shift and go to state 87


state 57

    (14) map -> map map_item .

    B_MAP_COMPACT_KEY reduce using rule 14 (map -> map map_item .)
    B_MAP_KEY       reduce using rule 14 (map -> map map_item .)
    DOUBLEQUOTE_START reduce using rule 14 (map -> map map_item .)
    SINGLEQUOTE_START reduce using rule 14 (map -> map map_item .)
    CAST_TYPE       reduce using rule 14 (map -> map map_item .)
    SCALAR          reduce using rule 14 (map -> map map_item .)
    B_LITERAL_START reduce using rule 14 (map -> map map_item .)
    B_FOLD_START    reduce using rule 14 (map -> map map_item .)
    INDENT          reduce using rule 14 (map -> map map_item .)
    DEDENT          reduce using rule 14 (map -> map map_item .)
    DOC_END         reduce using rule 14 (map -> map map_item .)
    DOC_START       reduce using rule 14 (map -> map map_item .)
    F_SEQUENCE_START reduce using rule 14 (map -> map map_item .)
    F_MAP_START     reduce using rule 14 (map -> map map_item .)
    B_SEQUENCE_START reduce using rule 14 (map -> map map_item .)
    B_SEQUENCE_COMPACT_START reduce using rule 14 (map -> map map_item .)
    $end            reduce using rule 14 (map -> map map_item .)


state 58

    (3) docs -> docs doc .

    DOC_START       reduce using rule 3 (docs -> docs doc .)
    INDENT          reduce using rule 3 (docs -> docs doc .)
    DOUBLEQUOTE_START reduce using rule 3 (docs -> docs doc .)
    SINGLEQUOTE_START reduce using rule 3 (docs -> docs doc .)
    CAST_TYPE       reduce using rule 3 (docs -> docs doc .)
    SCALAR          reduce using rule 3 (docs -> docs doc .)
    B_LITERAL_START reduce using rule 3 (docs -> docs doc .)
    B_FOLD_START    reduce using rule 3 (docs -> docs doc .)
    F_SEQUENCE_START reduce using rule 3 (docs -> docs doc .)
    F_MAP_START     reduce using rule 3 (docs -> docs doc .)
    B_SEQUENCE_START reduce using rule 3 (docs -> docs doc .)
    B_SEQUENCE_COMPACT_START reduce using rule 3 (docs -> docs doc .)
    B_MAP_COMPACT_KEY reduce using rule 3 (docs -> docs doc .)
    B_MAP_KEY       reduce using rule 3 (docs -> docs doc .)
    $end            reduce using rule 3 (docs -> docs doc .)


state 59

    (9) scalar -> ignore_indent_dedent scalar .
    (42) scalar -> scalar . INDENT SCALAR DEDENT

  ! shift/reduce conflict for INDENT resolved as shift
    B_MAP_VALUE     reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    DOC_START       reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    DOUBLEQUOTE_START reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    SINGLEQUOTE_START reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    CAST_TYPE       reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    SCALAR          reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    B_LITERAL_START reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    B_FOLD_START    reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    F_SEQUENCE_START reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    F_MAP_START     reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    B_SEQUENCE_START reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    B_SEQUENCE_COMPACT_START reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    B_MAP_COMPACT_KEY reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    B_MAP_KEY       reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    $end            reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    DEDENT          reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    DOC_END         reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    F_MAP_KEY       reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    F_SEQUENCE_END  reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    F_SEP           reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    F_MAP_END       reduce using rule 9 (scalar -> ignore_indent_dedent scalar .)
    INDENT          shift and go to state 47

  ! INDENT          [ reduce using rule 9 (scalar -> ignore_indent_dedent scalar .) ]


state 60

    (50) flow_sequence -> flow_sequence_item .

    F_SEQUENCE_END  reduce using rule 50 (flow_sequence -> flow_sequence_item .)
    F_SEP           reduce using rule 50 (flow_sequence -> flow_sequence_item .)


state 61

    (46) flow_collection -> F_SEQUENCE_START flow_sequence . F_SEQUENCE_END
    (47) flow_collection -> F_SEQUENCE_START flow_sequence . F_SEP F_SEQUENCE_END
    (51) flow_sequence -> flow_sequence . F_SEP flow_sequence_item

    F_SEQUENCE_END  shift and go to state 88
    F_SEP           shift and go to state 89


state 62

    (52) flow_sequence_item -> scalar .
    (42) scalar -> scalar . INDENT SCALAR DEDENT

    F_SEQUENCE_END  reduce using rule 52 (flow_sequence_item -> scalar .)
    F_SEP           reduce using rule 52 (flow_sequence_item -> scalar .)
    INDENT          shift and go to state 47


state 63

    (4) doc -> DOC_START doc . DOC_END
    (5) doc -> DOC_START doc .

  ! shift/reduce conflict for DOC_END resolved as shift
    DOC_END         shift and go to state 90
    DOC_START       reduce using rule 5 (doc -> DOC_START doc .)
    INDENT          reduce using rule 5 (doc -> DOC_START doc .)
    DOUBLEQUOTE_START reduce using rule 5 (doc -> DOC_START doc .)
    SINGLEQUOTE_START reduce using rule 5 (doc -> DOC_START doc .)
    CAST_TYPE       reduce using rule 5 (doc -> DOC_START doc .)
    SCALAR          reduce using rule 5 (doc -> DOC_START doc .)
    B_LITERAL_START reduce using rule 5 (doc -> DOC_START doc .)
    B_FOLD_START    reduce using rule 5 (doc -> DOC_START doc .)
    F_SEQUENCE_START reduce using rule 5 (doc -> DOC_START doc .)
    F_MAP_START     reduce using rule 5 (doc -> DOC_START doc .)
    B_SEQUENCE_START reduce using rule 5 (doc -> DOC_START doc .)
    B_SEQUENCE_COMPACT_START reduce using rule 5 (doc -> DOC_START doc .)
    B_MAP_COMPACT_KEY reduce using rule 5 (doc -> DOC_START doc .)
    B_MAP_KEY       reduce using rule 5 (doc -> DOC_START doc .)
    $end            reduce using rule 5 (doc -> DOC_START doc .)
    DEDENT          reduce using rule 5 (doc -> DOC_START doc .)

  ! DOC_END         [ reduce using rule 5 (doc -> DOC_START doc .) ]


state 64

    (26) sequence -> sequence sequence_item .

    B_SEQUENCE_START reduce using rule 26 (sequence -> sequence sequence_item .)
    B_SEQUENCE_COMPACT_START reduce using rule 26 (sequence -> sequence sequence_item .)
    DEDENT          reduce using rule 26 (sequence -> sequence sequence_item .)
    DOC_START       reduce using rule 26 (sequence -> sequence sequence_item .)
    INDENT          reduce using rule 26 (sequence -> sequence sequence_item .)
    DOUBLEQUOTE_START reduce using rule 26 (sequence -> sequence sequence_item .)
    SINGLEQUOTE_START reduce using rule 26 (sequence -> sequence sequence_item .)
    CAST_TYPE       reduce using rule 26 (sequence -> sequence sequence_item .)
    SCALAR          reduce using rule 26 (sequence -> sequence sequence_item .)
    B_LITERAL_START reduce using rule 26 (sequence -> sequence sequence_item .)
    B_FOLD_START    reduce using rule 26 (sequence -> sequence sequence_item .)
    F_SEQUENCE_START reduce using rule 26 (sequence -> sequence sequence_item .)
    F_MAP_START     reduce using rule 26 (sequence -> sequence sequence_item .)
    B_MAP_COMPACT_KEY reduce using rule 26 (sequence -> sequence sequence_item .)
    B_MAP_KEY       reduce using rule 26 (sequence -> sequence sequence_item .)
    $end            reduce using rule 26 (sequence -> sequence sequence_item .)
    DOC_END         reduce using rule 26 (sequence -> sequence sequence_item .)


state 65

    (28) sequence_item -> B_SEQUENCE_START INDENT collection . DEDENT

    DEDENT          shift and go to state 91


state 66

    (34) scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .

    INDENT          reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_MAP_VALUE     reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_MAP_COMPACT_VALUE reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    DOC_START       reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    DOUBLEQUOTE_START reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    SINGLEQUOTE_START reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    CAST_TYPE       reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    SCALAR          reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_LITERAL_START reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_FOLD_START    reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_SEQUENCE_START reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_MAP_START     reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_SEQUENCE_START reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_MAP_COMPACT_KEY reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_MAP_KEY       reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    $end            reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    DEDENT          reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    DOC_END         reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_MAP_KEY       reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_SEQUENCE_END  reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_SEP           reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_MAP_END       reduce using rule 34 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)


state 67

    (31) sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .

    B_SEQUENCE_START reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    DEDENT          reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_MAP_COMPACT_KEY reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_MAP_KEY       reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    DOUBLEQUOTE_START reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    SINGLEQUOTE_START reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    CAST_TYPE       reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    SCALAR          reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_LITERAL_START reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_FOLD_START    reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    INDENT          reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    DOC_END         reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    DOC_START       reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    F_SEQUENCE_START reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    F_MAP_START     reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    $end            reduce using rule 31 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)


state 68

    (6) doc -> INDENT doc DEDENT .

    DOC_END         reduce using rule 6 (doc -> INDENT doc DEDENT .)
    DOC_START       reduce using rule 6 (doc -> INDENT doc DEDENT .)
    INDENT          reduce using rule 6 (doc -> INDENT doc DEDENT .)
    DOUBLEQUOTE_START reduce using rule 6 (doc -> INDENT doc DEDENT .)
    SINGLEQUOTE_START reduce using rule 6 (doc -> INDENT doc DEDENT .)
    CAST_TYPE       reduce using rule 6 (doc -> INDENT doc DEDENT .)
    SCALAR          reduce using rule 6 (doc -> INDENT doc DEDENT .)
    B_LITERAL_START reduce using rule 6 (doc -> INDENT doc DEDENT .)
    B_FOLD_START    reduce using rule 6 (doc -> INDENT doc DEDENT .)
    F_SEQUENCE_START reduce using rule 6 (doc -> INDENT doc DEDENT .)
    F_MAP_START     reduce using rule 6 (doc -> INDENT doc DEDENT .)
    B_SEQUENCE_START reduce using rule 6 (doc -> INDENT doc DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 6 (doc -> INDENT doc DEDENT .)
    B_MAP_COMPACT_KEY reduce using rule 6 (doc -> INDENT doc DEDENT .)
    B_MAP_KEY       reduce using rule 6 (doc -> INDENT doc DEDENT .)
    $end            reduce using rule 6 (doc -> INDENT doc DEDENT .)
    DEDENT          reduce using rule 6 (doc -> INDENT doc DEDENT .)


state 69

    (41) scalar -> INDENT scalar_group DEDENT .

    INDENT          reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    B_MAP_VALUE     reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    B_MAP_COMPACT_VALUE reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    DOC_START       reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    DOUBLEQUOTE_START reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    SINGLEQUOTE_START reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    CAST_TYPE       reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    SCALAR          reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    B_LITERAL_START reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    B_FOLD_START    reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    F_SEQUENCE_START reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    F_MAP_START     reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    B_SEQUENCE_START reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    B_MAP_COMPACT_KEY reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    B_MAP_KEY       reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    $end            reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    DEDENT          reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    DOC_END         reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    F_MAP_KEY       reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    F_SEQUENCE_END  reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    F_SEP           reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)
    F_MAP_END       reduce using rule 41 (scalar -> INDENT scalar_group DEDENT .)


state 70

    (44) scalar_group -> scalar_group SCALAR .

    B_LITERAL_END   reduce using rule 44 (scalar_group -> scalar_group SCALAR .)
    SCALAR          reduce using rule 44 (scalar_group -> scalar_group SCALAR .)
    DEDENT          reduce using rule 44 (scalar_group -> scalar_group SCALAR .)
    B_FOLD_END      reduce using rule 44 (scalar_group -> scalar_group SCALAR .)


state 71

    (30) map_item_value -> B_MAP_COMPACT_VALUE collection . DEDENT

    DEDENT          shift and go to state 92


state 72

    (20) map_item_value -> B_MAP_VALUE INDENT . collection DEDENT
    (23) map_item_value -> B_MAP_VALUE INDENT . scalar DEDENT
    (41) scalar -> INDENT . scalar_group DEDENT
    (45) ignore_indent_dedent -> INDENT . DEDENT
    (10) collection -> . sequence
    (11) collection -> . map
    (12) collection -> . flow_collection
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (43) scalar_group -> . SCALAR
    (44) scalar_group -> . scalar_group SCALAR
    (25) sequence -> . sequence_item
    (26) sequence -> . sequence sequence_item
    (13) map -> . map_item
    (14) map -> . map map_item
    (46) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (47) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END
    (48) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (49) flow_collection -> . F_MAP_START flow_map F_SEP F_MAP_END
    (45) ignore_indent_dedent -> . INDENT DEDENT
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection
    (15) map_item -> . map_item_key map_item_value
    (16) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (17) map_item_key -> . B_MAP_KEY scalar
    (18) map_item_key -> . scalar
    (19) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (29) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DEDENT          shift and go to state 34
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 95
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31
    F_SEQUENCE_START shift and go to state 23
    F_MAP_START     shift and go to state 17
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4
    B_MAP_COMPACT_KEY shift and go to state 19
    B_MAP_KEY       shift and go to state 8

    map_item                       shift and go to state 15
    sequence                       shift and go to state 25
    sequence_item                  shift and go to state 3
    map_item_key                   shift and go to state 6
    scalar_group                   shift and go to state 37
    map                            shift and go to state 20
    ignore_indent_dedent           shift and go to state 22
    flow_collection                shift and go to state 11
    scalar                         shift and go to state 93
    collection                     shift and go to state 94

state 73

    (21) map_item_value -> B_MAP_VALUE flow_collection .

    B_MAP_COMPACT_KEY reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_MAP_KEY       reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    DOUBLEQUOTE_START reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    SINGLEQUOTE_START reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    CAST_TYPE       reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    SCALAR          reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_LITERAL_START reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_FOLD_START    reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    INDENT          reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    DOC_END         reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    DOC_START       reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    F_SEQUENCE_START reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    F_MAP_START     reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_SEQUENCE_START reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_SEQUENCE_COMPACT_START reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    $end            reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)
    DEDENT          reduce using rule 21 (map_item_value -> B_MAP_VALUE flow_collection .)


state 74

    (22) map_item_value -> B_MAP_VALUE scalar .
    (42) scalar -> scalar . INDENT SCALAR DEDENT

  ! shift/reduce conflict for INDENT resolved as shift
    B_MAP_COMPACT_KEY reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    B_MAP_KEY       reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    DOUBLEQUOTE_START reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    SINGLEQUOTE_START reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    CAST_TYPE       reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    SCALAR          reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    B_LITERAL_START reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    B_FOLD_START    reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    DOC_END         reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    DOC_START       reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    F_SEQUENCE_START reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    F_MAP_START     reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    B_SEQUENCE_START reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    B_SEQUENCE_COMPACT_START reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    $end            reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    DEDENT          reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .)
    INDENT          shift and go to state 47

  ! INDENT          [ reduce using rule 22 (map_item_value -> B_MAP_VALUE scalar .) ]


state 75

    (24) map_item_value -> B_MAP_VALUE sequence .
    (26) sequence -> sequence . sequence_item
    (27) sequence_item -> . B_SEQUENCE_START scalar
    (28) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (31) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (32) sequence_item -> . B_SEQUENCE_START flow_collection

  ! shift/reduce conflict for B_SEQUENCE_START resolved as shift
  ! shift/reduce conflict for B_SEQUENCE_COMPACT_START resolved as shift
    B_MAP_COMPACT_KEY reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    B_MAP_KEY       reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    DOUBLEQUOTE_START reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    SINGLEQUOTE_START reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    CAST_TYPE       reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    SCALAR          reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    B_LITERAL_START reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    B_FOLD_START    reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    INDENT          reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    DOC_END         reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    DOC_START       reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    F_SEQUENCE_START reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    F_MAP_START     reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    $end            reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    DEDENT          reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .)
    B_SEQUENCE_START shift and go to state 1
    B_SEQUENCE_COMPACT_START shift and go to state 4

  ! B_SEQUENCE_START [ reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .) ]
  ! B_SEQUENCE_COMPACT_START [ reduce using rule 24 (map_item_value -> B_MAP_VALUE sequence .) ]

    sequence_item                  shift and go to state 64

state 76

    (40) scalar -> B_FOLD_START scalar_group B_FOLD_END .

    INDENT          reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_MAP_VALUE     reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_MAP_COMPACT_VALUE reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    DOC_START       reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    DOUBLEQUOTE_START reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    SINGLEQUOTE_START reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    CAST_TYPE       reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    SCALAR          reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_LITERAL_START reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_FOLD_START    reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_SEQUENCE_START reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_MAP_START     reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_SEQUENCE_START reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_MAP_COMPACT_KEY reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_MAP_KEY       reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    $end            reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    DEDENT          reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    DOC_END         reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_MAP_KEY       reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_SEQUENCE_END  reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_SEP           reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_MAP_END       reduce using rule 40 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)


state 77

    (19) map_item_key -> B_MAP_KEY INDENT collection . DEDENT

    DEDENT          shift and go to state 96


state 78

    (39) scalar -> B_LITERAL_START scalar_group B_LITERAL_END .

    INDENT          reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_MAP_VALUE     reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_MAP_COMPACT_VALUE reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    DOC_START       reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    DOUBLEQUOTE_START reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    SINGLEQUOTE_START reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    CAST_TYPE       reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    SCALAR          reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_LITERAL_START reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_FOLD_START    reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_SEQUENCE_START reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_MAP_START     reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_SEQUENCE_START reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_MAP_COMPACT_KEY reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_MAP_KEY       reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    $end            reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    DEDENT          reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    DOC_END         reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_MAP_KEY       reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_SEQUENCE_END  reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_SEP           reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_MAP_END       reduce using rule 39 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)


state 79

    (42) scalar -> scalar INDENT SCALAR . DEDENT

    DEDENT          shift and go to state 97


state 80

    (33) scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .

    INDENT          reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_MAP_VALUE     reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_MAP_COMPACT_VALUE reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    DOC_START       reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    DOUBLEQUOTE_START reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    SINGLEQUOTE_START reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    CAST_TYPE       reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    SCALAR          reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_LITERAL_START reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_FOLD_START    reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_SEQUENCE_START reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_MAP_START     reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_SEQUENCE_START reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_MAP_COMPACT_KEY reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_MAP_KEY       reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    $end            reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    DEDENT          reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    DOC_END         reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_MAP_KEY       reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_SEQUENCE_END  reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_SEP           reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_MAP_END       reduce using rule 33 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)


state 81

    (55) flow_map_item -> flow_map_item_key flow_map_item_value .

    F_MAP_END       reduce using rule 55 (flow_map_item -> flow_map_item_key flow_map_item_value .)
    F_SEP           reduce using rule 55 (flow_map_item -> flow_map_item_key flow_map_item_value .)


state 82

    (57) flow_map_item_value -> scalar .
    (42) scalar -> scalar . INDENT SCALAR DEDENT

    F_MAP_END       reduce using rule 57 (flow_map_item_value -> scalar .)
    F_SEP           reduce using rule 57 (flow_map_item_value -> scalar .)
    INDENT          shift and go to state 47


state 83

    (56) flow_map_item_key -> scalar F_MAP_KEY .

    DOUBLEQUOTE_START reduce using rule 56 (flow_map_item_key -> scalar F_MAP_KEY .)
    SINGLEQUOTE_START reduce using rule 56 (flow_map_item_key -> scalar F_MAP_KEY .)
    CAST_TYPE       reduce using rule 56 (flow_map_item_key -> scalar F_MAP_KEY .)
    SCALAR          reduce using rule 56 (flow_map_item_key -> scalar F_MAP_KEY .)
    B_LITERAL_START reduce using rule 56 (flow_map_item_key -> scalar F_MAP_KEY .)
    B_FOLD_START    reduce using rule 56 (flow_map_item_key -> scalar F_MAP_KEY .)
    INDENT          reduce using rule 56 (flow_map_item_key -> scalar F_MAP_KEY .)


state 84

    (48) flow_collection -> F_MAP_START flow_map F_MAP_END .

    DEDENT          reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_MAP_COMPACT_KEY reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_MAP_KEY       reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    DOUBLEQUOTE_START reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    SINGLEQUOTE_START reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    CAST_TYPE       reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    SCALAR          reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_LITERAL_START reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_FOLD_START    reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    INDENT          reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    DOC_END         reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    DOC_START       reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    F_SEQUENCE_START reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    F_MAP_START     reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_SEQUENCE_START reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    $end            reduce using rule 48 (flow_collection -> F_MAP_START flow_map F_MAP_END .)


state 85

    (49) flow_collection -> F_MAP_START flow_map F_SEP . F_MAP_END
    (54) flow_map -> flow_map F_SEP . flow_map_item
    (55) flow_map_item -> . flow_map_item_key flow_map_item_value
    (56) flow_map_item_key -> . scalar F_MAP_KEY
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    F_MAP_END       shift and go to state 99
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    ignore_indent_dedent           shift and go to state 22
    flow_map_item                  shift and go to state 98
    scalar                         shift and go to state 51
    flow_map_item_key              shift and go to state 50

state 86

    (16) map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE . scalar DEDENT
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    ignore_indent_dedent           shift and go to state 22
    scalar                         shift and go to state 100

state 87

    (29) map_item_key -> B_MAP_COMPACT_KEY collection DEDENT .

    B_MAP_VALUE     reduce using rule 29 (map_item_key -> B_MAP_COMPACT_KEY collection DEDENT .)
    B_MAP_COMPACT_VALUE reduce using rule 29 (map_item_key -> B_MAP_COMPACT_KEY collection DEDENT .)


state 88

    (46) flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .

    DEDENT          reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_MAP_COMPACT_KEY reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_MAP_KEY       reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    DOUBLEQUOTE_START reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    SINGLEQUOTE_START reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    CAST_TYPE       reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    SCALAR          reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_LITERAL_START reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_FOLD_START    reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    INDENT          reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    DOC_END         reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    DOC_START       reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    F_SEQUENCE_START reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    F_MAP_START     reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_SEQUENCE_START reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    $end            reduce using rule 46 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)


state 89

    (47) flow_collection -> F_SEQUENCE_START flow_sequence F_SEP . F_SEQUENCE_END
    (51) flow_sequence -> flow_sequence F_SEP . flow_sequence_item
    (52) flow_sequence_item -> . scalar
    (9) scalar -> . ignore_indent_dedent scalar
    (33) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (34) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (35) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (36) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (37) scalar -> . CAST_TYPE scalar
    (38) scalar -> . SCALAR
    (39) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (40) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (41) scalar -> . INDENT scalar_group DEDENT
    (42) scalar -> . scalar INDENT SCALAR DEDENT
    (45) ignore_indent_dedent -> . INDENT DEDENT

    F_SEQUENCE_END  shift and go to state 102
    DOUBLEQUOTE_START shift and go to state 16
    SINGLEQUOTE_START shift and go to state 2
    CAST_TYPE       shift and go to state 18
    SCALAR          shift and go to state 14
    B_LITERAL_START shift and go to state 10
    B_FOLD_START    shift and go to state 7
    INDENT          shift and go to state 31

    ignore_indent_dedent           shift and go to state 22
    flow_sequence_item             shift and go to state 101
    scalar                         shift and go to state 62

state 90

    (4) doc -> DOC_START doc DOC_END .

    DOC_END         reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    DOC_START       reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    INDENT          reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    DOUBLEQUOTE_START reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    SINGLEQUOTE_START reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    CAST_TYPE       reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    SCALAR          reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    B_LITERAL_START reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    B_FOLD_START    reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    F_SEQUENCE_START reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    F_MAP_START     reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    B_SEQUENCE_START reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    B_MAP_COMPACT_KEY reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    B_MAP_KEY       reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    $end            reduce using rule 4 (doc -> DOC_START doc DOC_END .)
    DEDENT          reduce using rule 4 (doc -> DOC_START doc DOC_END .)


state 91

    (28) sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .

    B_SEQUENCE_START reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    DEDENT          reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_MAP_COMPACT_KEY reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_MAP_KEY       reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    DOUBLEQUOTE_START reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    SINGLEQUOTE_START reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    CAST_TYPE       reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    SCALAR          reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_LITERAL_START reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_FOLD_START    reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    INDENT          reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    DOC_END         reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    DOC_START       reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    F_SEQUENCE_START reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    F_MAP_START     reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    $end            reduce using rule 28 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)


state 92

    (30) map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .

    B_MAP_COMPACT_KEY reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_MAP_KEY       reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    DOUBLEQUOTE_START reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    SINGLEQUOTE_START reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    CAST_TYPE       reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    SCALAR          reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_LITERAL_START reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_FOLD_START    reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    INDENT          reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    DOC_END         reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    DOC_START       reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    F_SEQUENCE_START reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    F_MAP_START     reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_SEQUENCE_START reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    $end            reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    DEDENT          reduce using rule 30 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)


state 93

    (23) map_item_value -> B_MAP_VALUE INDENT scalar . DEDENT
    (42) scalar -> scalar . INDENT SCALAR DEDENT
    (18) map_item_key -> scalar .

    DEDENT          shift and go to state 103
    INDENT          shift and go to state 47
    B_MAP_VALUE     reduce using rule 18 (map_item_key -> scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 18 (map_item_key -> scalar .)


state 94

    (20) map_item_value -> B_MAP_VALUE INDENT collection . DEDENT

    DEDENT          shift and go to state 104


state 95

    (38) scalar -> SCALAR .
    (43) scalar_group -> SCALAR .

  ! reduce/reduce conflict for DEDENT resolved using rule 38 (scalar -> SCALAR .)
    DEDENT          reduce using rule 38 (scalar -> SCALAR .)
    INDENT          reduce using rule 38 (scalar -> SCALAR .)
    B_MAP_VALUE     reduce using rule 38 (scalar -> SCALAR .)
    B_MAP_COMPACT_VALUE reduce using rule 38 (scalar -> SCALAR .)
    SCALAR          reduce using rule 43 (scalar_group -> SCALAR .)

  ! DEDENT          [ reduce using rule 43 (scalar_group -> SCALAR .) ]


state 96

    (19) map_item_key -> B_MAP_KEY INDENT collection DEDENT .

    B_MAP_VALUE     reduce using rule 19 (map_item_key -> B_MAP_KEY INDENT collection DEDENT .)
    B_MAP_COMPACT_VALUE reduce using rule 19 (map_item_key -> B_MAP_KEY INDENT collection DEDENT .)


state 97

    (42) scalar -> scalar INDENT SCALAR DEDENT .

    INDENT          reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    B_MAP_VALUE     reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    B_MAP_COMPACT_VALUE reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    DOC_START       reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    DOUBLEQUOTE_START reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    SINGLEQUOTE_START reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    CAST_TYPE       reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    SCALAR          reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    B_LITERAL_START reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    B_FOLD_START    reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    F_SEQUENCE_START reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    F_MAP_START     reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    B_SEQUENCE_START reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    B_MAP_COMPACT_KEY reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    B_MAP_KEY       reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    $end            reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    DEDENT          reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    DOC_END         reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    F_MAP_KEY       reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    F_SEQUENCE_END  reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    F_SEP           reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)
    F_MAP_END       reduce using rule 42 (scalar -> scalar INDENT SCALAR DEDENT .)


state 98

    (54) flow_map -> flow_map F_SEP flow_map_item .

    F_MAP_END       reduce using rule 54 (flow_map -> flow_map F_SEP flow_map_item .)
    F_SEP           reduce using rule 54 (flow_map -> flow_map F_SEP flow_map_item .)


state 99

    (49) flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .

    DEDENT          reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    B_MAP_COMPACT_KEY reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    B_MAP_KEY       reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    DOUBLEQUOTE_START reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    SINGLEQUOTE_START reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    CAST_TYPE       reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    SCALAR          reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    B_LITERAL_START reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    B_FOLD_START    reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    INDENT          reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    DOC_END         reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    DOC_START       reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    F_SEQUENCE_START reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    F_MAP_START     reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    B_SEQUENCE_START reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)
    $end            reduce using rule 49 (flow_collection -> F_MAP_START flow_map F_SEP F_MAP_END .)


state 100

    (16) map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar . DEDENT
    (42) scalar -> scalar . INDENT SCALAR DEDENT

    DEDENT          shift and go to state 105
    INDENT          shift and go to state 47


state 101

    (51) flow_sequence -> flow_sequence F_SEP flow_sequence_item .

    F_SEQUENCE_END  reduce using rule 51 (flow_sequence -> flow_sequence F_SEP flow_sequence_item .)
    F_SEP           reduce using rule 51 (flow_sequence -> flow_sequence F_SEP flow_sequence_item .)


state 102

    (47) flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .

    DEDENT          reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    B_MAP_COMPACT_KEY reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    B_MAP_KEY       reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    DOUBLEQUOTE_START reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    SINGLEQUOTE_START reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    CAST_TYPE       reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    SCALAR          reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    B_LITERAL_START reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    B_FOLD_START    reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    INDENT          reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    DOC_END         reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    DOC_START       reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    F_SEQUENCE_START reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    F_MAP_START     reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    B_SEQUENCE_START reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)
    $end            reduce using rule 47 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEP F_SEQUENCE_END .)


state 103

    (23) map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .

    B_MAP_COMPACT_KEY reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    B_MAP_KEY       reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    DOUBLEQUOTE_START reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    SINGLEQUOTE_START reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    CAST_TYPE       reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    SCALAR          reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    B_LITERAL_START reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    B_FOLD_START    reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    INDENT          reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    DOC_END         reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    DOC_START       reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    F_SEQUENCE_START reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    F_MAP_START     reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    B_SEQUENCE_START reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    $end            reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)
    DEDENT          reduce using rule 23 (map_item_value -> B_MAP_VALUE INDENT scalar DEDENT .)


state 104

    (20) map_item_value -> B_MAP_VALUE INDENT collection DEDENT .

    B_MAP_COMPACT_KEY reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_MAP_KEY       reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    DOUBLEQUOTE_START reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    SINGLEQUOTE_START reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    CAST_TYPE       reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    SCALAR          reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_LITERAL_START reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_FOLD_START    reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    INDENT          reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    DOC_END         reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    DOC_START       reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    F_SEQUENCE_START reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    F_MAP_START     reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_SEQUENCE_START reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    $end            reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    DEDENT          reduce using rule 20 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)


state 105

    (16) map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .

    B_MAP_COMPACT_KEY reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_MAP_KEY       reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    DOUBLEQUOTE_START reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    SINGLEQUOTE_START reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    CAST_TYPE       reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    SCALAR          reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_LITERAL_START reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_FOLD_START    reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    INDENT          reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    DEDENT          reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    DOC_END         reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    DOC_START       reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    F_SEQUENCE_START reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    F_MAP_START     reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_SEQUENCE_START reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    $end            reduce using rule 16 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INDENT in state 12 resolved as shift
WARNING: shift/reduce conflict for B_MAP_COMPACT_KEY in state 20 resolved as shift
WARNING: shift/reduce conflict for B_MAP_KEY in state 20 resolved as shift
WARNING: shift/reduce conflict for DOUBLEQUOTE_START in state 20 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE_START in state 20 resolved as shift
WARNING: shift/reduce conflict for CAST_TYPE in state 20 resolved as shift
WARNING: shift/reduce conflict for SCALAR in state 20 resolved as shift
WARNING: shift/reduce conflict for B_LITERAL_START in state 20 resolved as shift
WARNING: shift/reduce conflict for B_FOLD_START in state 20 resolved as shift
WARNING: shift/reduce conflict for INDENT in state 20 resolved as shift
WARNING: shift/reduce conflict for B_SEQUENCE_START in state 25 resolved as shift
WARNING: shift/reduce conflict for B_SEQUENCE_COMPACT_START in state 25 resolved as shift
WARNING: shift/reduce conflict for INDENT in state 28 resolved as shift
WARNING: shift/reduce conflict for INDENT in state 54 resolved as shift
WARNING: shift/reduce conflict for B_MAP_VALUE in state 55 resolved as shift
WARNING: shift/reduce conflict for INDENT in state 59 resolved as shift
WARNING: shift/reduce conflict for DOC_END in state 63 resolved as shift
WARNING: shift/reduce conflict for INDENT in state 74 resolved as shift
WARNING: shift/reduce conflict for B_SEQUENCE_START in state 75 resolved as shift
WARNING: shift/reduce conflict for B_SEQUENCE_COMPACT_START in state 75 resolved as shift
WARNING: reduce/reduce conflict in state 36 resolved using rule (scalar -> SCALAR)
WARNING: rejected rule (scalar_group -> SCALAR) in state 36
WARNING: reduce/reduce conflict in state 95 resolved using rule (scalar -> SCALAR)
WARNING: rejected rule (scalar_group -> SCALAR) in state 95
